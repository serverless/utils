# Version tags only

name: Publish

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    env:
      # It'll work with secrets.GITHUB_TOKEN (which is provided by GitHub unconditionally)
      # Still then "github-actions" will be mentioned release author.
      # It's nicer if it's "serverless-ci"
      GITHUB_TOKEN: ${{ secrets.USER_GITHUB_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v14-${{ runner.os }}-refs/heads/master-${{ hashFiles('package.json') }}
          restore-keys: npm-v14-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-dev-v14-${{ runner.os }}-refs/heads/master-${{ hashFiles('package.json') }}
          restore-keys: node-modules-dev-v14-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
          registry-url: https://registry.npmjs.org

      - name: Publish new version
        run: |
          # Ensure to not publish .github folder
          echo '/.github' > .npmignore
          npm publish

        # Note: Setting NODE_AUTH_TOKEN as job|workspace wide env var won't work
        #       as it appears actions/setup-node sets own value
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install dev dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: npm update --save-dev --no-save

      - name: Publish release notes
        run: |
          TEMP_ARRAY=($(echo $GITHUB_REF | tr "/" "\n"))
          TAG=${TEMP_ARRAY[@]: -1}
          npx github-release-from-cc-changelog $TAG
