# PR's only

name: Validate

on:
  pull_request:
    branches: [master]

jobs:
  lintFormattingAndNode14Test:
    name: 'Lint, Formatting & Node.js v14: Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve last master commit (for `git diff` purposes)
        run: |
          git checkout -b pr
          git fetch --prune --depth=1 origin +refs/heads/master:refs/remotes/origin/master
          git checkout master
          git checkout pr

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-v14-${{ runner.os }}-${{ github.ref }}-
            npm-v14-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v14-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v14-${{ runner.os }}-${{ github.ref }}-
            node-modules-v14-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Validate Prettier formatting
        run: npm run prettier-check:updated
      - name: Validate ESLint rules
        run: npm run lint:updated
      - name: Validate changelog (if new version)
        run: |
          NEW_VERSION=`git diff -U0 master package.json | grep '"version": "' | tail -n 1 | grep -oE "[0-9]+\.[0-9]+\.[0-9]+"` || :
          if [ -n "$NEW_VERSION" ];
          then
            npx dump-release-notes-from-cc-changelog $NEW_VERSION
          fi
      - name: Test
        run: npm test

  Node12IsolatedTest:
    name: 'Node.js v12: Isolated test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v12-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-v12-${{ runner.os }}-${{ github.ref }}-
            npm-v12-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v12-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v12-${{ runner.os }}-${{ github.ref }}-
            node-modules-v12-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Test
        run: npm run test:isolated

  Node10Test:
    name: 'Node.js v10: Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v10-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-v10-${{ runner.os }}-${{ github.ref }}-
            npm-v10-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v10-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v10-${{ runner.os }}-${{ github.ref }}-
            node-modules-v10-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 10.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Test
        run: npm test

  Node8Test:
    name: 'Node.js v8: Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v8-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-v8-${{ runner.os }}-${{ github.ref }}-
            npm-v8-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v8-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v8-${{ runner.os }}-${{ github.ref }}-
            node-modules-v8-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 8.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Test
        run: npm test

  Node6Test:
    name: 'Node.js v6: Test'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Retrieve ~/.npm from cache
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: npm-v6-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            npm-v6-${{ runner.os }}-${{ github.ref }}-
            npm-v6-${{ runner.os }}-refs/heads/master-
      - name: Retrieve node_modules from cache
        id: cacheNodeModules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-modules-v6-${{ runner.os }}-${{ github.ref }}-${{ hashFiles('package.json') }}
          restore-keys: |
            node-modules-v6-${{ runner.os }}-${{ github.ref }}-
            node-modules-v6-${{ runner.os }}-refs/heads/master-

      - name: Install Node.js and npm
        uses: actions/setup-node@v1
        with:
          node-version: 6.x

      - name: Install dependencies
        if: steps.cacheNodeModules.outputs.cache-hit != 'true'
        run: |
          npm update --no-save
          npm update --save-dev --no-save
      - name: Test
        run: npm test
